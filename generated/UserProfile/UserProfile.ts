// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ProfileUpdated extends ethereum.Event {
  get params(): ProfileUpdated__Params {
    return new ProfileUpdated__Params(this);
  }
}

export class ProfileUpdated__Params {
  _event: ProfileUpdated;

  constructor(event: ProfileUpdated) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get profilePicHash(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class UserProfile__getProfileResult {
  value0: string;
  value1: string;

  constructor(value0: string, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getProfilePicHash(): string {
    return this.value1;
  }
}

export class UserProfile__userProfilesResult {
  value0: string;
  value1: string;

  constructor(value0: string, value1: string) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    return map;
  }

  getName(): string {
    return this.value0;
  }

  getProfilePicHash(): string {
    return this.value1;
  }
}

export class UserProfile extends ethereum.SmartContract {
  static bind(address: Address): UserProfile {
    return new UserProfile("UserProfile", address);
  }

  getProfile(user: Address): UserProfile__getProfileResult {
    let result = super.call(
      "getProfile",
      "getProfile(address):(string,string)",
      [ethereum.Value.fromAddress(user)]
    );

    return new UserProfile__getProfileResult(
      result[0].toString(),
      result[1].toString()
    );
  }

  try_getProfile(
    user: Address
  ): ethereum.CallResult<UserProfile__getProfileResult> {
    let result = super.tryCall(
      "getProfile",
      "getProfile(address):(string,string)",
      [ethereum.Value.fromAddress(user)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new UserProfile__getProfileResult(
        value[0].toString(),
        value[1].toString()
      )
    );
  }

  userProfiles(param0: Address): UserProfile__userProfilesResult {
    let result = super.call(
      "userProfiles",
      "userProfiles(address):(string,string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new UserProfile__userProfilesResult(
      result[0].toString(),
      result[1].toString()
    );
  }

  try_userProfiles(
    param0: Address
  ): ethereum.CallResult<UserProfile__userProfilesResult> {
    let result = super.tryCall(
      "userProfiles",
      "userProfiles(address):(string,string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new UserProfile__userProfilesResult(
        value[0].toString(),
        value[1].toString()
      )
    );
  }
}

export class SetProfileCall extends ethereum.Call {
  get inputs(): SetProfileCall__Inputs {
    return new SetProfileCall__Inputs(this);
  }

  get outputs(): SetProfileCall__Outputs {
    return new SetProfileCall__Outputs(this);
  }
}

export class SetProfileCall__Inputs {
  _call: SetProfileCall;

  constructor(call: SetProfileCall) {
    this._call = call;
  }

  get name(): string {
    return this._call.inputValues[0].value.toString();
  }

  get profilePicHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class SetProfileCall__Outputs {
  _call: SetProfileCall;

  constructor(call: SetProfileCall) {
    this._call = call;
  }
}
